package com.napier.mad.appstates;

import com.jme3.app.Application;
import com.jme3.app.state.BaseAppState;
import com.jme3.math.Quaternion;
import com.jme3.math.Vector3f;
import com.jme3.scene.Node;
import com.napier.mad.components.DecayPathComponent;
import com.napier.mad.components.PathAutoGeneratedComponent;
import com.napier.mad.components.PathComponent;
import com.napier.mad.constants.Constants;
import com.napier.mad.factory.EntityFactory;
import com.napier.mad.types.Direction;
import com.simsilica.es.EntityData;
import com.simsilica.es.EntityId;

import java.util.ArrayList;
import java.util.List;

public class GameStarterAppState extends BaseAppState {

    @Override
    protected void initialize(Application app) {
        EntityData entityData = getState(EntityDataAppState.class).getEntityData();
        // init some entities
        float TILE_LENGTH = Constants.TILE_LENGTH;

        EntityId straight = EntityFactory.createStraightRoad(entityData, new Vector3f(0, 0, 0), new Quaternion(), Direction.NORTH);
        EntityId straight2 = EntityFactory.createStraightRoad(entityData, new Vector3f(0, 0, 1 * TILE_LENGTH), new Quaternion(), Direction.NORTH);

        // create path
        List<EntityId> path = new ArrayList<>();
        path.add(straight);
        path.add(straight2);

        // create path entity
        EntityId pathId = entityData.createEntity();
        entityData.setComponents(pathId,
                new PathComponent(path),
                new PathAutoGeneratedComponent(),
                new DecayPathComponent(0));

        // create player and let player follow that path
        this.player = EntityFactory.createPlayer(entityData, pathId);

        PlayerAppState playerAppState = getState(PlayerAppState.class);
        playerAppState.setPlayerId(player);

    }

    private EntityId player;
    private boolean cameraSetup;

    @Override
    public void update(float tpf) {
        if (!cameraSetup) {
            CameraAppState cameraAppState = getState(CameraAppState.class);
            ModelLoaderAppState modelLoaderAppState = getState(ModelLoaderAppState.class);
            Node modelNode = modelLoaderAppState.getModelNode(player);
            if (modelNode != null) {
                cameraAppState.chase(modelNode);
                cameraSetup = true;
            }
        }
    }

    @Override
    protected void cleanup(Application app) {
    }

    @Override
    protected void onEnable() {

    }

    @Override
    protected void onDisable() {

    }
}
